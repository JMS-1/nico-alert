server {
    listen 127.0.0.1:23901;

    location / {
        return 200 "OK\n";

        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }
}

server {
    listen 23900 ssl http2;
    
    ssl_certificate /etc/ssl/certs/nginx/host.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/host.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHAECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-ES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    auth_basic "Protected";
    auth_basic_user_file /etc/nginx/basic_auth;

    location /config {
        limit_except GET {
            deny all;
        }

        root /usr;

        autoindex on;
        autoindex_format json;
        autoindex_localtime off;

        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    location /config.json {
        limit_except PUT {
            deny all;
        }

        client_body_temp_path /usr/config;
        client_body_in_file_only on;

        proxy_set_body off;
        proxy_pass http://127.0.0.1:23901/;
    }

    location /iot/ {
        limit_except GET {
            deny all;
        }

        proxy_set_header Authorization "";
        proxy_pass http://nicoalert/;
    }

    location / {
        limit_except GET {
            deny all;
        }

        root /usr/webapp;
    }

    access_log off;
    error_log /var/log/nginx/error.log error;
}
